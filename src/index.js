const dakutenMap = {"ｶ":"ガ","ｷ":"ギ","ｸ":"グ","ｹ":"ゲ","ｺ":"ゴ","ｻ":"ザ","ｼ":"ジ","ｽ":"ズ","ｾ":"ゼ","ｿ":"ゾ","ﾀ":"ダ","ﾁ":"ヂ","ﾂ":"ヅ","ﾃ":"デ","ﾄ":"ド","ﾊ":"バ","ﾋ":"ビ","ﾌ":"ブ","ﾍ":"ベ","ﾎ":"ボ","ｳ":"ヴ","ﾜ":"ヷ","ｦ":"ヺ"}
const handakutenMap = {"ﾊ":"パ","ﾋ":"ピ","ﾌ":"プ","ﾍ":"ペ","ﾎ":"ポ"}
const charMap = {"｡":"。","｢":"「","｣":"」","､":"、","･":"・","ｦ":"ヲ","ｧ":"ァ","ｨ":"ィ","ｩ":"ゥ","ｪ":"ェ","ｫ":"ォ","ｬ":"ャ","ｭ":"ュ","ｮ":"ョ","ｯ":"ッ","ｰ":"ー","ｱ":"ア","ｲ":"イ","ｳ":"ウ","ｴ":"エ","ｵ":"オ","ｶ":"カ","ｷ":"キ","ｸ":"ク","ｹ":"ケ","ｺ":"コ","ｻ":"サ","ｼ":"シ","ｽ":"ス","ｾ":"セ","ｿ":"ソ","ﾀ":"タ","ﾁ":"チ","ﾂ":"ツ","ﾃ":"テ","ﾄ":"ト","ﾅ":"ナ","ﾆ":"ニ","ﾇ":"ヌ","ﾈ":"ネ","ﾉ":"ノ","ﾊ":"ハ","ﾋ":"ヒ","ﾌ":"フ","ﾍ":"ヘ","ﾎ":"ホ","ﾏ":"マ","ﾐ":"ミ","ﾑ":"ム","ﾒ":"メ","ﾓ":"モ","ﾔ":"ヤ","ﾕ":"ユ","ﾖ":"ヨ","ﾗ":"ラ","ﾘ":"リ","ﾙ":"ル","ﾚ":"レ","ﾛ":"ロ","ﾜ":"ワ","ﾝ":"ン","ﾞ":"゛","ﾟ":"゜","0":"０","1":"１","2":"２","3":"３","4":"４","5":"５","6":"６","7":"７","8":"８","9":"９","A":"Ａ","B":"Ｂ","C":"Ｃ","D":"Ｄ","E":"Ｅ","F":"Ｆ","G":"Ｇ","H":"Ｈ","I":"Ｉ","J":"Ｊ","K":"Ｋ","L":"Ｌ","M":"Ｍ","N":"Ｎ","O":"Ｏ","P":"Ｐ","Q":"Ｑ","R":"Ｒ","S":"Ｓ","T":"Ｔ","U":"Ｕ","V":"Ｖ","W":"Ｗ","X":"Ｘ","Y":"Ｙ","Z":"Ｚ","a":"ａ","b":"ｂ","c":"ｃ","d":"ｄ","e":"ｅ","f":"ｆ","g":"ｇ","h":"ｈ","i":"ｉ","j":"ｊ","k":"ｋ","l":"ｌ","m":"ｍ","n":"ｎ","o":"ｏ","p":"ｐ","q":"ｑ","r":"ｒ","s":"ｓ","t":"ｔ","u":"ｕ","v":"ｖ","w":"ｗ","x":"ｘ","y":"ｙ","z":"ｚ","!":"！","\"":"＂","#":"＃","$":"＄","%":"％","&":"＆","(":"（",")":"）","*":"＊","+":"＋",",":"，","-":"－",".":"．","/":"／",":":"：",";":"；","<":"＜","=":"＝",">":"＞","?":"？","@":"＠","[":"［","]":"］","^":"＾","_":"＿","`":"｀","{":"｛","|":"｜","}":"｝","~":"～","·":"･","₵":"￠","£":"￡","¥":"￥","₩":"￦","\\":"＼","'":"＇"," ":"　"," ":"　"," ":"　"," ":"　"," ":"　"," ":"　"," ":"　"," ":"　"," ":"　"," ":"　"," ":"　"}

const dakuten = '\uFF9E'
const handakuten = '\uFF9F'

function charMapToCodesMap (charMap) {
  return Object
    .keys(charMap)
    .reduce((map, key) => {
      map[key.charCodeAt()] = charMap[key].charCodeAt()
      return map
    }, {})
}

const dakutenCodesMap = charMapToCodesMap(dakutenMap)
const handakutenCodesMap = charMapToCodesMap(handakutenMap)
const codesMap = charMapToCodesMap(charMap)

export default (str) => {
  let res = ''

  for (let i = 0; i < str.length; i++) {
    let code = str[i].charCodeAt()
    let fullwidthCode
    let mark = str[i + 1]

    if (mark === dakuten) {
      fullwidthCode = dakutenCodesMap[code]
    } else if (mark === handakuten) {
      fullwidthCode = handakutenCodesMap[code]
    }

    if (fullwidthCode) {
      i++
    } else {
      fullwidthCode = codesMap[code]
    }

    res += fullwidthCode ? String.fromCharCode(fullwidthCode) : str[i]
  }

  return res
}
